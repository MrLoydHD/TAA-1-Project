{
    "trial_id": "04",
    "hyperparameters": {
      "space": [
        {
          "class_name": "Float",
          "config": {
            "name": "l2_regularization",
            "default": 1e-05,
            "conditions": [],
            "min_value": 1e-05,
            "max_value": 0.01,
            "step": null,
            "sampling": "log"
          }
        },
        {
          "class_name": "Choice",
          "config": {
            "name": "units",
            "default": 10,
            "conditions": [],
            "values": [10, 20, 30, 40, 50],
            "ordered": true
          }
        },
        {
          "class_name": "Float",
          "config": {
            "name": "learning_rate",
            "default": 0.0001,
            "conditions": [],
            "min_value": 0.0001,
            "max_value": 0.1,
            "step": null,
            "sampling": "log"
          }
        },
        {
          "class_name": "Float",
          "config": {
            "name": "momentum",
            "default": 0.8,
            "conditions": [],
            "min_value": 0.8,
            "max_value": 0.99,
            "step": 0.01,
            "sampling": "linear"
          }
        },
        {
          "class_name": "Float",
          "config": {
            "name": "decay",
            "default": 1e-06,
            "conditions": [],
            "min_value": 1e-06,
            "max_value": 0.001,
            "step": null,
            "sampling": "log"
          }
        },
        {
          "class_name": "Choice",
          "config": {
            "name": "nesterov",
            "default": 1,
            "conditions": [],
            "values": [1, 0],
            "ordered": true
          }
        }
      ],
      "values": {
        "l2_regularization": 1.0948619412924023e-05,
        "units": 50,
        "learning_rate": 0.0015797676110581996,
        "momentum": 0.98,
        "decay": 3.257832035268722e-05,
        "nesterov": 0
      }
    },
    "metrics": {
      "metrics": {}
    },
    "score": null,
    "best_step": 0,
    "status": "FAILED",
    "message": "Traceback (most recent call last):\n  File \"/home/kernaite/Documents/TAA/venv/lib/python3.11/site-packages/keras_tuner/src/engine/base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"/home/kernaite/Documents/TAA/venv/lib/python3.11/site-packages/keras_tuner/src/engine/base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/kernaite/Documents/TAA/venv/lib/python3.11/site-packages/keras_tuner/src/engine/tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/kernaite/Documents/TAA/venv/lib/python3.11/site-packages/keras_tuner/src/engine/tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/kernaite/Documents/TAA/venv/lib/python3.11/site-packages/keras_tuner/src/engine/hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/kernaite/Documents/TAA/venv/lib/python3.11/site-packages/keras/src/utils/traceback_utils.py\", line 122, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"/home/kernaite/Documents/TAA/venv/lib/python3.11/site-packages/keras/src/backend/tensorflow/nn.py\", line 553, in categorical_crossentropy\n    raise ValueError(\nValueError: Arguments `target` and `output` must have the same shape. Received: target.shape=(None, 10), output.shape=(None, 50)\n"
  }